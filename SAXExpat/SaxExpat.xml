<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SaxExpat</name>
    </assembly>
    <members>
        <member name="T:Kds.Xml.Expat.RsId">
            <summary>Identifies localized string constants.</summary> 
        </member>
        <member name="T:Kds.Xml.Expat.Constants">
            <summary>Defines constants for the <see cref="N:Kds.Xml.Expat"/> namespace.</summary> 
        </member>
        <member name="F:Kds.Xml.Expat.Constants.NullChar">
            <summary>Character constant.</summary>
        </member>
        <member name="F:Kds.Xml.Expat.Constants.Colon">
            <summary>Character constant.</summary>
        </member>
        <member name="F:Kds.Xml.Expat.Constants.Equal">
            <summary>Character constant.</summary>
        </member>
        <member name="M:Kds.Xml.Expat.Constants.GetString(Kds.Xml.Expat.RsId)">
            <summary>Returns localized string constants.</summary>
        </member>
        <member name="T:Kds.Xml.Expat.ExpatAttributes">
            <summary>Expat specific <see cref="T:Org.System.Xml.Sax.IAttributes"/> implementation.</summary> 
        </member>
        <member name="M:Kds.Xml.Expat.ExpatAttributes.GetType(System.Int32)">
            <overloads>
              <summary>
                Returns declared type of attribute, or 'UNDECLARED' if no
                declaration was read.
              </summary>
              <remarks>
                Enumerated attributes are reported as type 'ENUMERATION'
                according to the InfoSet spec, instead of 'NMTOKEN' as
                required by the Java SAX2 specs.
              </remarks>
            </overloads>
        </member>
        <member name="T:Kds.Xml.Expat.ExpatStreamSource">
            <summary>Expat specific subclass of <see cref="T:Org.System.Xml.Sax.InputSource`1"/>.</summary>
            <remarks>Used to differentiate between internally created and
            and application provided input sources.</remarks>
        </member>
        <member name="T:Kds.Xml.Expat.DocParseData">
            <summary>Struct for internal use in <see cref="T:Kds.Xml.Expat.ExpatReader"/>. Groups
            all fields that are used specifically during the parsing process.</summary>
        </member>
        <member name="T:Kds.Xml.Expat.ExpatParseError">
            <summary>Expat specific <see cref="T:Org.System.Xml.Sax.ParseError"/> implementation.</summary> 
        </member>
        <member name="T:Kds.Xml.Expat.ExpatLocator">
            <summary>Expat specific <see cref="T:Org.System.Xml.Sax.ILocator"/> implementation.</summary>
            <remarks>The Expat specific <see cref="P:Kds.Xml.Expat.ExpatLocator.ParsePosition"/> method
            is accessible when casting to the actual implementation class.</remarks>
        </member>
        <member name="P:Kds.Xml.Expat.ExpatLocator.ParsePosition">
            <summary>Gives access to the parse position in the current input stream.</summary>
            <remarks>Since the current input stream changes when an external
            entity is parsed, one cannot access the parent document's parse
            position (or column/line number) unless one saves it in the
            <see cref="M:Org.System.Xml.Sax.ILexicalHandler.StartEntity(System.String)"/> callback</remarks>
        </member>
        <member name="T:Kds.Xml.Expat.ExpatReader">
            <summary>Wrapper class that exposes the (unmanaged) Expat XML parser
            through the <see cref="T:Org.System.Xml.Sax.IXmlReader"/> interface.</summary>
            <remarks><list type="bullet">
            <item>Works only with Expat 1.95.7 and later. To enable the features
              of a later version, specific conditional compile symbols must be defined.
              Currently the symbols EXPAT_1_95_8_UP and EXPAT_2_0_UP are recognized.
              EXPAT_1_95_8_UP enables the suspend/resume functionality introduced with
              Expat 1.95.8. EXPAT_2_0_UP enables 64-bit values for line- and column numbers.
              This requires that Expat 2.0 is compiled with XML_LARGE_SIZE defined.
            </item>
            <item>By casting the usual <see cref="T:Org.System.Xml.Sax.IXmlReader"/> interface reference to
              <c>ExpatReader</c> one can gain access to some Expat specific functionality,
              and also to the currently active Expat parser instance, so that the
              functions exported by the Dll can be called directly (see Expat.cs).</item>
            <item>SAX Features and Properties: <c>ExpatReader</c> also exposes Features
              and Properties directly as public properties for more efficient access.
              </item>
            <item>Input sources: <c>ExpatReader</c> can currently only use <see cref="T:Org.System.Xml.Sax.InputSource"/>,
              <see cref="T:Org.System.Xml.Sax.InputSource`1"/> and <see cref="T:Org.System.Xml.Sax.InputSource`1"/> instances.</item>
            <item>No Validation: <c>ExpatReader</c> processes and reports all DTD declarations
              but does not validate against them. However, attribute values are defaulted
              and entity references are replaced.</item>
            <item><see cref="M:Org.System.Xml.Sax.IContentHandler.IgnorableWhitespace(System.Char[],System.Int32,System.Int32)"/> will not be called
              because the parser is non-validating. Such white space will be reported as
              character data.</item>
            <item>The <see cref="M:Org.System.Xml.Sax.IXmlReader.Suspend"/> function will not work while an
              external parameter entity is being parsed. It will silently fail, that is,
              one should check the <see cref="P:Org.System.Xml.Sax.IXmlReader.Status"/> property immediately
              afterwards. Other events where it will fail silently are 
              <see cref="M:Org.System.Xml.Sax.IContentHandler.EndDocument"/> and <see cref="M:Org.System.Xml.Sax.ILexicalHandler.EndEntity(System.String)"/>,
              even if correctly called when <see cref="P:Org.System.Xml.Sax.IXmlReader.Status"/> =
              <see cref="F:Org.System.Xml.Sax.XmlReaderStatus.Parsing"/>.</item>
            <item>"http://xml.org/sax/features/namespace-prefixes" feature:
              When this feature is turned on, xmlns attributes (namespace declarations)
              are to be reported like regular attributes, in addition to being reported
              through the <see cref="M:Org.System.Xml.Sax.IContentHandler.StartPrefixMapping(System.String,System.String)"/> or
              <see cref="M:Org.System.Xml.Sax.IContentHandler.EndPrefixMapping(System.String)"/> events. However, the underlying
              Expat parser never reports xmlns attributes when namespace processing is turned
              on, so this feature will have the value <c>false</c> in this case. Conversely,
              it will assume the value <c>true</c> when namespace processing is turned off.
              This is automatically enforced when setting the namespaces feature.
              Trying to set the namespace-prefixes feature to a value conflicting with
              the namespaces feature will throw an exception.</item>
            <item><see cref="M:Org.System.Xml.Sax.IContentHandler.StartDocument"/> and
              <see cref="M:Org.System.Xml.Sax.IContentHandler.EndDocument"/> call-backs: 
              Once <see cref="M:Org.System.Xml.Sax.IContentHandler.StartDocument"/> was called, 
              <see cref="M:Org.System.Xml.Sax.IContentHandler.EndDocument"/> will be called
              as well, even after a fatal error, or when an exception was raised,
              or when parsing was aborted by calling <see cref="M:Org.System.Xml.Sax.IXmlReader.Abort"/>.
              If <see cref="M:Org.System.Xml.Sax.IContentHandler.StartDocument"/> was not called, 
              <see cref="M:Org.System.Xml.Sax.IContentHandler.EndDocument"/> will not be called either.
              This is independent of whether a content handler was assigned or not, so
              it should maybe read: "Once StartDocument() would have been called, ...".
              </item>
            <item>This is how entities are reported:
              <list type="table">
                <listheader>We use these shorthand terms:</listheader>
                <item>ExternalGeneral = external-general-entities feature.</item>
                <item>LexicalParameter = lexical-handler/parameter-entities feature.</item>
                <item>SkipInternal = skip-internal-entities feature.</item>
              </list>
              <list type="table">
                <listheader>External General Entities:</listheader>
                <item>
                  <term>ExternalGeneral = True.</term>
                  <description><see cref="M:Org.System.Xml.Sax.ILexicalHandler.StartEntity(System.String)"/> and
                  <see cref="M:Org.System.Xml.Sax.ILexicalHandler.EndEntity(System.String)"/> are called.</description>
                </item>
                <item>
                  <term>ExternalGeneral = False.</term>
                  <description><see cref="M:Org.System.Xml.Sax.IContentHandler.SkippedEntity(System.String)"/> is called.</description>
                </item>
              </list>
              <list type="table">
                <listheader>
                  External Parameter Entities - LexicalParameter = True:
                </listheader>
                <item>
                  <term>ExternalParameter = True.</term>
                  <description><see cref="M:Org.System.Xml.Sax.ILexicalHandler.StartEntity(System.String)"/> and
                  <see cref="M:Org.System.Xml.Sax.ILexicalHandler.EndEntity(System.String)"/> are called.</description>
                </item>
                <item>
                  <term>ExternalParameter = False.</term>
                  <description><see cref="M:Org.System.Xml.Sax.IContentHandler.SkippedEntity(System.String)"/> is called.</description>
                </item>
              </list>
              <list type="table">
                <listheader>
                  External Parameter Entities - LexicalParameter = False:
                </listheader>
                <item>No calls, external parameter entities are silently ignored.</item>
              </list>
              <list type="table">
                <listheader>
                  Internal Entities - LexicalParameter = True:
                </listheader>
                <item>
                  <term>SkipInternal = True.</term>
                  <description><see cref="M:Org.System.Xml.Sax.IContentHandler.SkippedEntity(System.String)"/> is called.</description>
                </item>
                <item>
                  <term>SkipInternal = False.</term>
                  <description>No calls, entities silently expanded.</description>
                </item>
              </list>
              <list type="table">
                <listheader>
                  Internal Entities - LexicalParameter = False:
                </listheader>
                <item>
                  Parameter entities are not parsed, i.e. silently ignored.
                </item>
              </list>
            </item>
            <item><see cref="T:Org.System.Xml.Sax.ILexicalHandler"/>, internal entities:
              The <see cref="M:Org.System.Xml.Sax.ILexicalHandler.StartEntity(System.String)"/> and
              <see cref="M:Org.System.Xml.Sax.ILexicalHandler.EndEntity(System.String)"/> methods are only called for
              external entities, internal entities are not reported (except when
              skipped). There is the XML_GetCurrentByteCount() function in the Expat
              library which returns 0 if the current call-back is triggered from inside
              an internal entity - which could be useful.</item>
            </list></remarks>
        </member>
        <member name="M:Kds.Xml.Expat.ExpatReader.GetFeature(System.String)">
             <summary>Returns if named feature is turned on or not.</summary>
             <remarks>Supported features are:
            
             <list type="table">
               <listheader>
                 Standard features - prefixed with "http://xml.org/sax/features/"
                 <term>Name</term>
                 <description>Properties</description>
               </listheader>
               <item>
                 <term>namespaces</term>
                 <description>
                   Access: read/write, default true.<br/>
                   Should be set *before* parsing is started. If set later, it will
                   only affect the reporting of QNames, that is, if namespaces was
                   true at the beginning, then QName/Prefix reporting can be turned
                   off during parsing, but namespace processing will stay active.
                 </description>
               </item>
               <item>
                 <term>namespace-prefixes</term>
                 <description>
                   Access: read-only, value depends on namespaces feature.<br/>
                   The underlying Expat parser never reports xmlns attributes when
                   namespace processing is turned on, so this feature is set to false
                   in this case even though prefixes (in QNames) would still be reported.
                   Conversely, when namespace processing is turned off then this feature
                   is automatically set to true.
                 </description>
               </item>
               <item>
                 <term>validation</term>
                 <description>
                   Access: read/write, fixed false.
                 </description>
               </item>
               <item>
                 <term>external-general-entities</term>
                 <description>
                   Access: read/write, default false.
                 </description>
               </item>
               <item>
                 <term>external-parameter-entities</term>
                 <description>
                   Access: read/write, default false.
                 </description>
               </item>
               <item>
                 <term>resolve-dtd-uris</term>
                 <description>
                   Access: read/write, default false.
                 </description>
               </item>
               <item>
                 <term>lexical-handler/parameter-entities</term>
                 <description>
                   Access: read/write, default true.<br/>
                   With limitations - See remarks regarding internal entities
                   and <see cref="T:Org.System.Xml.Sax.ILexicalHandler"/> on <see cref="T:Kds.Xml.Expat.ExpatReader"/>.
                   It is not certain that the way this feature is implemented
                   conforms to SAX2, but it works the same way as in MSXML4.
                   It seems that if it is turned off then parameter entities should
                   still be reported if skipped, but this is not done here since
                   internally this feature is equivalent to the parameter-entities
                   extension feature which turns parameter entity parsing on or off.
                 </description>
               </item>
               <item>
                 <term>xmlns-uris</term>
                 <description>
                   Access: read/write, fixed false.<br/>
                 </description>
               </item>
               <item>
                 <term>xml-1.1</term>
                 <description>
                   Access: read-only, fixed false.<br/>
                 </description>
               </item>
               <item>
                 <term>unicode-normalization-checking</term>
                 <description>
                   Access: read/write, fixed false.<br/>
                 </description>
               </item>
               <item>
                 <term>xml-declaration</term>
                 <description>
                   Access: read-only, fixed true.<br/>
                 </description>
               </item>
               <item>
                 <term>use-external-subset</term>
                 <description>
                   Access: read-only, fixed true.<br/>
                 </description>
               </item>
               <item>
                 <term>reader-control</term>
                 <description>
                   Access: read-only, default depends on compile options.<br/>
                   Returns if the Suspend()/Resume() functionality is implemented.
                   This is true when compiled with EXPAT_1_95_8_UP defined
                   and version 1.95.8 (or later) of the Expat library is used.
                 </description>
               </item>
             </list>
            
             <list type="table">
               <listheader>
                 Extension features - prefixed with "http://kd-soft.net/sax/features/"
                 <term>Name</term>
                 <description>Properties</description>
               </listheader>
               <item>
                 <term>parameter-entities</term>
                 <description>
                   Access: read/write, default true.<br/>
                   Turns parameter entity parsing on or off. This affects all of the
                   external subset, as well as parameter entities in the internal
                   subset. The rest of the internal subset is still being processed.
                 </description>
               </item>
               <item>
                 <term>skip-internal-entities</term>
                 <description>
                   Access: read/write, default false.<br/>
                   Skip or (silently) expand internal entities (parameter and general).
                 </description>
               </item>
               <item>
                 <term>parse-unless-standalone</term>
                 <description>
                   Access: read/write, default false.<br/>
                   When turned on external parameter entities will not be parsed
                   if the XML declaration specifies standalone = "yes".
                 </description>
               </item>
               <item>
                 <term>standalone-error</term>
                 <description>
                   Access: read/write, default false.<br/>
                   Determines if the parser returns an error, when it encounters
                   an external subset or a reference to a parameter entity, but
                   the document has standalone="yes" in the XML declaration.
                 </description>
               </item>
             </list>
            
             <para>
               Note: "read/write, fixed false" means that the feature can be set,
               but only to the value false, otherwise an exception will be thrown.
             </para>
             </remarks>
        </member>
        <member name="M:Kds.Xml.Expat.ExpatReader.SetFeature(System.String,System.Boolean)">
            <summary>Turns named feature on or off.</summary>
            <remarks>See remarks on <see cref="M:Kds.Xml.Expat.ExpatReader.GetFeature(System.String)"/>.</remarks>
        </member>
        <member name="M:Kds.Xml.Expat.ExpatReader.GetProperty``1(System.String)">
            <summary>Returns interface to named property.</summary>
            <remarks>Supported properties are:
            <list type="table">
              <listheader>
                Extension properties - prefixed with "http://kd-soft.net/sax/properties/"
                <term>Name</term>
                <description>Properties</description>
              </listheader>
              <item>
                <term>default-handler</term>
                <description>
                  Value access: read/write.<br/>
                  The default handler receives events for which no handler is set.
                </description>
              </item>
            </list>
            </remarks>
        </member>
        <member name="P:Kds.Xml.Expat.ExpatReader.EntityResolver">
            <remarks>When <see cref="M:Org.System.Xml.Sax.IEntityResolver.GetExternalSubset(System.String,System.String)"/> is called
            for a document without a DOCTYPE declaration, then the Name argument
            will be empty since Expat does not read ahead to determine the name
            of the root element. This behaviour does not follow the SAX2 specs.
            However, it should not be a problem because the application which
            provides the external subset should rather use information from the
            application context to supply the correct DTD, and not rely on the
            Name argument.</remarks>
        </member>
        <member name="P:Kds.Xml.Expat.ExpatReader.BaseUri">
            <summary>Base URI of the entity currently being parsed.</summary>
            <remarks>Must be an absolute URI.</remarks>
        </member>
        <member name="P:Kds.Xml.Expat.ExpatReader.StrTable">
            <summary>String table used for string interning.</summary>
            <remarks>Must not be <c>null</c>. Should not be set while parsing.</remarks>
        </member>
        <member name="P:Kds.Xml.Expat.ExpatReader.ContentModel">
            <summary>Expat specific content model structure.</summary>
            <remarks>Only valid in ElementDecl() handler call-back.</remarks>
        </member>
        <member name="T:Kds.Xml.Expat.SaxEntityContext">
            <summary>Class for internal use in <see cref="T:Kds.Xml.Expat.ExpatReader"/>. Groups all
            entity specific fields that are used during the parsing process.</summary>
        </member>
        <member name="T:Kds.Xml.Expat.SaxExpatParser">
            <summary>Class for internal use in <see cref="T:Kds.Xml.Expat.ExpatReader"/>.
            Represents Expat parser.</summary>
        </member>
    </members>
</doc>
